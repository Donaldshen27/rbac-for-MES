paths:
  /menus:
    get:
      tags:
        - Menus
      summary: List all menus
      description: Get all menu items (admin only)
      operationId: getAllMenus
      security:
        - bearerAuth: []
      parameters:
        - name: includeInactive
          in: query
          description: Include inactive menus
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Menus retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Menus retrieved successfully
                  data:
                    type: object
                    properties:
                      menus:
                        type: array
                        items:
                          $ref: '#/components/schemas/Menu'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

    post:
      tags:
        - Menus
      summary: Create menu
      description: Create a new menu item
      operationId: createMenu
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - path
              properties:
                name:
                  type: string
                  maxLength: 100
                  example: Reports
                path:
                  type: string
                  maxLength: 200
                  example: /reports
                icon:
                  type: string
                  maxLength: 50
                  example: chart
                parentId:
                  type: string
                  format: uuid
                  nullable: true
                order:
                  type: integer
                  minimum: 0
                  example: 1
                isActive:
                  type: boolean
                  default: true
                meta:
                  type: object
                  description: Additional metadata for the menu
      responses:
        '201':
          description: Menu created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Menu created successfully
                  data:
                    type: object
                    properties:
                      menu:
                        $ref: '#/components/schemas/Menu'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '409':
          $ref: '#/components/responses/ConflictError'

  /menus/tree:
    get:
      tags:
        - Menus
      summary: Get menu tree
      description: Get hierarchical menu structure
      operationId: getMenuTree
      security:
        - bearerAuth: []
      parameters:
        - name: roleId
          in: query
          description: Filter by role permissions
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Menu tree retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Menu tree retrieved successfully
                  data:
                    type: object
                    properties:
                      tree:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/Menu'
                            - type: object
                              properties:
                                children:
                                  type: array
                                  items:
                                    type: object
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /menus/user:
    get:
      tags:
        - Menus
      summary: Get user menu
      description: Get menu items accessible to the current user
      operationId: getUserMenu
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User menu retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User menu retrieved successfully
                  data:
                    type: object
                    properties:
                      menu:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/Menu'
                            - type: object
                              properties:
                                children:
                                  type: array
                                  items:
                                    type: object
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /menus/reorder:
    put:
      tags:
        - Menus
      summary: Reorder menus
      description: Update the order of menu items
      operationId: reorderMenus
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - menuOrders
              properties:
                menuOrders:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - order
                    properties:
                      id:
                        type: string
                        format: uuid
                      order:
                        type: integer
                        minimum: 0
      responses:
        '200':
          description: Menu order updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Menu order updated successfully
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /menus/{id}:
    get:
      tags:
        - Menus
      summary: Get menu by ID
      description: Get detailed information about a specific menu
      operationId: getMenuById
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        '200':
          description: Menu retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Menu retrieved successfully
                  data:
                    type: object
                    properties:
                      menu:
                        allOf:
                          - $ref: '#/components/schemas/Menu'
                          - type: object
                            properties:
                              parent:
                                $ref: '#/components/schemas/Menu'
                              children:
                                type: array
                                items:
                                  $ref: '#/components/schemas/Menu'
                              roles:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      format: uuid
                                    name:
                                      type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    put:
      tags:
        - Menus
      summary: Update menu
      description: Update menu information
      operationId: updateMenu
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/idParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 100
                path:
                  type: string
                  maxLength: 200
                icon:
                  type: string
                  maxLength: 50
                parentId:
                  type: string
                  format: uuid
                  nullable: true
                order:
                  type: integer
                  minimum: 0
                isActive:
                  type: boolean
                meta:
                  type: object
      responses:
        '200':
          description: Menu updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Menu updated successfully
                  data:
                    type: object
                    properties:
                      menu:
                        $ref: '#/components/schemas/Menu'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      tags:
        - Menus
      summary: Delete menu
      description: Delete a menu item
      operationId: deleteMenu
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        '200':
          description: Menu deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Menu deleted successfully
        '400':
          description: Cannot delete menu with children
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /menus/{id}/move:
    put:
      tags:
        - Menus
      summary: Move menu
      description: Move a menu item to a different parent
      operationId: moveMenu
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/idParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - parentId
              properties:
                parentId:
                  type: string
                  format: uuid
                  nullable: true
                  description: New parent ID (null for root level)
                order:
                  type: integer
                  minimum: 0
                  description: Position within the new parent
      responses:
        '200':
          description: Menu moved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Menu moved successfully
                  data:
                    type: object
                    properties:
                      menu:
                        $ref: '#/components/schemas/Menu'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /menus/{id}/permissions:
    get:
      tags:
        - Menus
      summary: Get menu permissions
      description: Get roles that have access to this menu
      operationId: getMenuPermissions
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        '200':
          description: Menu permissions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Menu permissions retrieved successfully
                  data:
                    type: object
                    properties:
                      roles:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            userCount:
                              type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    put:
      tags:
        - Menus
      summary: Update menu permissions
      description: Update roles that have access to this menu
      operationId: updateMenuPermissions
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/idParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - roleIds
              properties:
                roleIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: Array of role IDs that should have access to this menu
      responses:
        '200':
          description: Menu permissions updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Menu permissions updated successfully
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'